// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/1/DMux8Way.hdl
/**
 * 8-way demultiplexor:
 * [a, b, c, d, e, f, g, h] = [in, 0,  0,  0,  0,  0,  0,  0] if sel = 000
 *                            [0, in,  0,  0,  0,  0,  0,  0] if sel = 001
 *                            [0,  0, in,  0,  0,  0,  0,  0] if sel = 010
 *                            [0,  0,  0, in,  0,  0,  0,  0] if sel = 011
 *                            [0,  0,  0,  0, in,  0,  0,  0] if sel = 100
 *                            [0,  0,  0,  0,  0, in,  0,  0] if sel = 101
 *                            [0,  0,  0,  0,  0,  0, in,  0] if sel = 110
 *                            [0,  0,  0,  0,  0,  0,  0, in] if sel = 111
 */
CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    DMux(in= in, sel= sel[0], a= aDMuxSel0, b= bDMuxSel0);
    DMux(in= in, sel= sel[1], a= aDMuxSel1, b= bDMuxSel1);
    DMux(in= in, sel= sel[2], a= aDMuxSel2, b= bDMuxSel2);
    And(a= aDMuxSel0, b= aDMuxSel1, out= dMuxAA);
    And(a= aDMuxSel0, b= bDMuxSel1, out= dMuxAB);
    And(a= bDMuxSel0, b= aDMuxSel1, out= dMuxBA);
    And(a= bDMuxSel0, b= bDMuxSel1, out= dMuxBB);
    And(a= dMuxAA, b= aDMuxSel2, out= a);
    And(a= dMuxAA, b= bDMuxSel2, out= e);
    And(a= dMuxBA, b= aDMuxSel2, out= b);
    And(a= dMuxBA, b= bDMuxSel2, out= f);
    And(a= dMuxAB, b= aDMuxSel2, out= c);
    And(a= dMuxAB, b= bDMuxSel2, out= g);
    And(a= dMuxBB, b= aDMuxSel2, out= d);
    And(a= dMuxBB, b= bDMuxSel2, out= h);
}