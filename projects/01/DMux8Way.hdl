// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
	DMux(in=in, sel=sel[0], a=dmux0a, b=dmux0b);
	DMux(in=in, sel=sel[1], a=dmux1a, b=dmux1b);
	DMux(in=in, sel=sel[2], a=dmux2a, b=dmux2b);
	And(a=dmux0a, b=dmux1a, out=dmux0a1a);
	And(a=dmux0b, b=dmux1a, out=dmux0b1a);
	And(a=dmux0a, b=dmux1b, out=dmux0a1b);
	And(a=dmux0b, b=dmux1b, out=dmux0b1b);
	And(a=dmux0a1a, b=dmux2a, out=a);
	And(a=dmux0b1a, b=dmux2a, out=b);
	And(a=dmux0a1b, b=dmux2a, out=c);
	And(a=dmux0b1b, b=dmux2a, out=d);
	And(a=dmux0a1a, b=dmux2b, out=e);
	And(a=dmux0b1a, b=dmux2b, out=f);
	And(a=dmux0a1b, b=dmux2b, out=g);
	And(a=dmux0b1b, b=dmux2b, out=h);
}